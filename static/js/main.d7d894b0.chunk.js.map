{"version":3,"sources":["components/shared/Loader/styles.module.css","components/AppBar/styles.module.css","components/shared/Button/styles.module.css","components/shared/PagerButton/styles.module.css","components/shared/Input/styles.module.css","components/TaskFilter/styles.module.css","components/Task/styles.module.css","theme/base.css","components/ui/container/index.jsx","components/AppBar/index.jsx","components/shared/Button/index.jsx","admin.js","redux/actions/types.js","components/AuthManager/index.jsx","redux/actions/auth.js","utils/authApi.js","redux/actions/tasks.js","components/SortManager/index.jsx","components/TaskEditor/index.jsx","components/shared/Checkbox/index.jsx","components/shared/EditableInput/index.jsx","components/Task/index.jsx","components/shared/InlineMessage/index.jsx","components/shared/PagerButton/index.jsx","components/shared/Pager.js","components/TaskList/index.jsx","utils/selectors.js","components/shared/Input/index.jsx","components/TaskFilter/index.jsx","components/pages/Login.jsx","components/shared/Loader/index.jsx","components/App/index.jsx","redux/reducers/tasks.js","redux/reducers/sort.js","redux/reducers/pager.js","redux/reducers/filter.js","redux/reducers/auth.js","redux/reducers/index.js","redux/middleware/thunk.js","redux/middleware/auth.js","redux/store.js","index.js","components/TaskEditor/styles.module.css","components/shared/EditableInput/styles.module.css","components/TaskList/styles.module.css"],"names":["module","exports","backdrop","sk_fading_circle","sk_circle","sk_circleFadeDelay","sk_circle2","sk_circle3","sk_circle4","sk_circle5","sk_circle6","sk_circle7","sk_circle8","sk_circle9","sk_circle10","sk_circle11","sk_circle12","header","primary-accent-color","secondary-accent-color","primary-white-color","orange-accent-color","limegreen-accent-color","button","disabled","isOrangeBgColor","active","primary-dark-color","input","form","task","actions","title","text","primary-font-stack","Container","_ref","_ref$width","width","_ref$styles","styles","children","react_default","a","createElement","style","Object","objectSpread","maxWidth","margin","padding","defaultProps","AppBar","className","container","display","justifyContent","alignItems","cx","classNames","bind","Button","type","onClick","btnCls","admin","FETCH_TASKS_START","FETCH_TASKS_SUCCESS","FETCH_TASKS_FAIL","ADD_TASK_SUCCESS","UPDATE_TASK_TEXT_SUCCESS","UPDATE_TASK_STATUS_SUCCESS","CHANGE_PAGE","UPDATE_TASKS_AMOUNT","CHANGE_SORT_FIELD","CHANGE_SORT_DIRECTION","CHANGE_FILTER","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAIL","SIGN_OUT","list","listStyle","link","fontFamily","fontSize","fontWeight","textTransform","textDecoration","activeLink","color","border","borderRadius","PublicActions","react_router_dom","to","activeStyle","PrivateActions","signOut","shared_Button","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","mapDispatchToProps","dispatch","Promise","resolve","setTimeout","_x","apply","this","arguments","connect","state","authenticated","auth","_ref3","props","objectWithoutProperties","AuthManager_PrivateActions","AuthManager_PublicActions","URL","fetchTasksStart","fetchTasksSuccess","tasks","payload","fetchTasksFail","error","changeSortField","sortField","changeSortDirection","sortDirection","changePage","currentPage","updateTasksAmount","totalTasks","addTask","_ref6","username","email","FormData","append","axios","method","url","concat","crossDomain","mimeType","contentType","processData","dataType","data","then","_ref7","newTask","message","updateTaskText","_ref8","id","_ref8$token","token","taskToUpdate","encodedUrl","encodeURI","hex","MD5","_ref9","status","updateTaskStatus","_ref10","_ref10$token","_ref11","btnGroup","minWidth","sortParams","asc","desc","SortManager","handleFetchSortedTasks","_this$props","_this","page","currentSortField","currentSortDirection","onFetchSortedTasks","changedSortDirection","_this2","_this$props2","sortButtonsJSX","map","sortParam","renderSortDirection","key","Component","pager","sort","_ref4","get","_ref5","_ref5$data$message","total_task_count","Number","catch","err","fetchSortedTasks","INITIAL_STATE","TaskEditor","handleInputChange","_ref$target","target","name","value","setState","defineProperty","handleSubmit","e","preventDefault","_this$state","onAddTask","onCancel","resetState","_this$state2","onSubmit","placeholder","onChange","rows","CheckboxContainer","styled","div","_templateObject","Icon","svg","_templateObject2","HiddenCheckbox","attrs","_templateObject3","StyledCheckbox","_templateObject4","checked","Checkbox","assign","viewBox","points","EditableInput","handleEditSuccess","onEditSuccess","handleEditCancel","onEditAbort","Task","isBeingEdited","onEditStart","onEditEnd","handleCheckboxChange","onUpdateTaskStatus","handleUpdate","onUpdateTaskText","nextProps","nextState","propsChanged","stateChanged","htmlFor","marginBottom","shared_Checkbox","marginLeft","EditableInput_EditableInput","Fragment","InlineMessage","paddingLeft","Pager","setPage","totalItems","pageSize","totalPages","Math","ceil","getPager","onChangePage","startPage","endPage","startIndex","endIndex","min","pages","toConsumableArray","Array","keys","i","items","length","initialPage","prevProps","PagerButton","_ref3$data$message","fetchTasksOnChangePage","filter","includes","react_masonry_component_lib_default","elementType","item","components_Task","shared_Pager","shared_InlineMessage","Input","onFilterChange","changeFilter","shared_Input","_ref2","flexGrow","flexDirection","height","inputGroup","login","password","LoginPage","checkAuthentication","history","push","signIn","credentials","reject","api","response","Loader","sk_circle1","Modal","setAppElement","modal","overlay","backgroundColor","content","top","left","transform","App","isModalOpen","handleOpenModal","handleCloseModal","fetchTasks","isLoading","basename","components_AppBar","components_SortManager","components_TaskFilter","components_AuthManager","shared_Loader","react_router","exact","path","component","TaskList","Login","lib_default","isOpen","onRequestClose","contentLabel","components_TaskEditor","loading","_ref2$data$message","combineReducers","undefined","initialState","rootReducer","taskReducer","sortReducer","authReducer","thunk","getState","action","store","localStorage","setItem","JSON","stringify","middleware","logger","session","enhancer","composeWithDevTools","applyMiddleware","sessionState","parse","getItem","console","log","persistedState","createStore","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,SAAA,yBAAAC,iBAAA,iCAAAC,UAAA,0BAAAC,mBAAA,mCAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,WAAA,2BAAAC,YAAA,4BAAAC,YAAA,4BAAAC,YAAA,kDCAlBhB,EAAAC,QAAA,CAAkBgB,OAAA,6CCAlBjB,EAAAC,QAAA,CAAkBiB,uBAAA,UAAAC,yBAAA,UAAAC,sBAAA,OAAAC,sBAAA,UAAAC,yBAAA,UAAAC,OAAA,uBAAAC,SAAA,8CAAAC,gBAAA,gCAAAC,OAAA,6CCAlB1B,EAAAC,QAAA,CAAkBiB,uBAAA,UAAAC,yBAAA,UAAAC,sBAAA,OAAAG,OAAA,uBAAAC,SAAA,yBAAAE,OAAA,6CCAlB1B,EAAAC,QAAA,CAAkB0B,qBAAA,UAAAT,uBAAA,UAAAU,MAAA,4CCAlB5B,EAAAC,QAAA,CAAkB4B,KAAA,gFCAlB7B,EAAAC,QAAA,CAAkB0B,qBAAA,UAAAG,KAAA,qBAAAC,QAAA,wBAAAC,MAAA,sBAAAC,KAAA,2CCAlBjC,EAAAC,QAAA,CAAkBiC,qBAAA,6BAAAd,sBAAA,0KCGZe,EAAY,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,aAAH,IAAAD,EAAW,KAAXA,EAAAE,EAAAH,EAAiBI,cAAjB,IAAAD,EAA0B,GAA1BA,EAA8BE,EAA9BL,EAA8BK,SAA9B,OAChBC,EAAAC,EAAAC,cAAA,OACEC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,CAAIE,SAAUV,EAAOW,OAAQ,SAAUC,QAAS,UAAaV,IACjEC,IAULN,EAAUgB,aAAe,CACvBb,MAAO,KACPE,OAAQ,GACRC,SAAU,IAGGN,0BCfTiB,EAAS,SAAAhB,GAAA,IAAGK,EAAHL,EAAGK,SAAH,OACbC,EAAAC,EAAAC,cAAA,UAAQS,UAAWb,IAAOvB,QACxByB,EAAAC,EAAAC,cAACU,EAAD,CACEd,OAAQ,CACNe,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAEbhB,KASPW,EAAOD,aAAe,CACpBV,SAAU,IAGGW,4ECtBTM,EAAKC,IAAWC,KAAKpB,KAErBqB,EAAS,SAAAzB,GAOT,IANJ0B,EAMI1B,EANJ0B,KACApC,EAKIU,EALJV,OACAF,EAIIY,EAJJZ,SACAiB,EAGIL,EAHJK,SACAhB,EAEIW,EAFJX,gBACAsC,EACI3B,EADJ2B,QAEMC,EAASN,EAAG,CAChBnC,QAAQ,EACRE,kBACAC,SACAF,aAGF,OACEkB,EAAAC,EAAAC,cAAA,UACEkB,KAAMA,EACNtC,SAAUA,EACV6B,UAAWW,EACXD,QAASA,GACRtB,IAkBPoB,EAAOV,aAAe,CACpBW,KAAM,SACNpC,QAAQ,EACRF,UAAU,EACVC,iBAAiB,EACjBgB,SAAU,GACVsB,QAAS,cAGIF,QCzDAI,EACN,QADMA,EAEH,MCFCC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAA6B,6BAE7BC,EAAc,cACdC,EAAsB,sBAEtBC,EAAoB,oBACpBC,EAAwB,wBAExBC,EAAgB,gBAEhBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAe,eACfC,EAAW,eCTlBxC,EAAS,CACbyC,KAAM,CACJ1B,QAAS,OACT2B,UAAW,OACXhC,QAAS,EACTD,OAAQ,GAEVkC,KAAM,CACJ5B,QAAS,QACTL,QAAS,MACTkC,WAAY,UACZC,SAAU,GACVC,WAAY,IACZC,cAAe,YACfC,eAAgB,QAElBC,WAAY,CACVC,MAAO,gBACPC,OAAQ,0BACRC,aAAc,IAIZC,EAAgB,kBACpBnD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAASC,GAAG,SAASlD,MAAOL,EAAO2C,KAAMa,YAAaxD,EAAOiD,YAA7D,YAMEQ,GAAiB,SAAA7D,GAAA,IAAG8D,EAAH9D,EAAG8D,QAAH,OACrBxD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuD,EAAD,CACEpC,QAAOjB,OAAAsD,EAAA,EAAAtD,CAAAuD,EAAA1D,EAAA2D,KAAE,SAAAC,IAAA,OAAAF,EAAA1D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDT,IADC,wBAAAO,EAAAG,SAAAL,OADX,YA+BEM,GAAqB,CAAEX,QCrDN,iCAAA9D,EAAAU,OAAAsD,EAAA,EAAAtD,CAAAuD,EAAA1D,EAAA2D,KAAM,SAAAC,EAAMO,GAAN,OAAAT,EAAA1D,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,ECGpB,IAAII,QAAQ,SAAAC,GACjBC,WAAW,WACTD,KACC,ODNsB,OAE3BF,EAAS,CAAEhD,KAAMkB,IACjB8B,EAAS,CAAEhD,KFJe,iBECC,wBAAA2C,EAAAG,SAAAL,MAAN,gBAAAW,GAAA,OAAA9E,EAAA+E,MAAAC,KAAAC,YAAA,KDuDRC,eANS,SAAAC,GAAK,MAAK,CAChCC,cAAeD,EAAME,KAAKD,gBAO1BX,GAFaS,CAxBK,SAAAI,GAAA,IAAGF,EAAHE,EAAGF,cAAkBG,EAArB7E,OAAA8E,EAAA,EAAA9E,CAAA4E,EAAA,0BAClBhF,EAAAC,EAAAC,cAAA,MAAIC,MAAOL,EAAOyC,MACfuC,EACC9E,EAAAC,EAAAC,cAACiF,GAAmBF,GAEpBjF,EAAAC,EAAAC,cAACkF,EAAkBH,8CGzCnBI,GAAM,kDAENC,GAAkB,iBAAO,CAC7BlE,KAAMI,IAGF+D,GAAoB,SAAAC,GAAK,MAAK,CAClCpE,KAAMK,EACNgE,QAASD,IAGLE,GAAiB,SAAAC,GAAK,MAAK,CAC/BvE,KAAMM,EACN+D,QAASE,IAGLC,GAAkB,SAAAC,GAAS,MAAK,CACpCzE,KAAMY,EACNyD,QAASI,IAGLC,GAAsB,SAAAC,GAAa,MAAK,CAC5C3E,KAAMa,EACNwD,QAASM,IAGLC,GAAa,SAAAC,GAAW,MAAK,CACjC7E,KAAMU,EACN2D,QAASQ,IAGLC,GAAoB,SAAAC,GAAU,MAAK,CACvC/E,KAAMW,EACN0D,QAASU,IA8EEC,GAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,MAAOhH,EAApB8G,EAAoB9G,KAApB,OAA+B,SAAA6E,GACpD,IAAMhF,EAAO,IAAIoH,SACjBpH,EAAKqH,OAAO,WAAYH,GACxBlH,EAAKqH,OAAO,QAASF,GACrBnH,EAAKqH,OAAO,OAAQlH,GAEpBmH,KAAM,CACJC,OAAQ,OACRC,IAAG,GAAAC,OAAKxB,GAAL,+BACHyB,aAAa,EACbC,SAAU,sBACVC,aAAa,EACbC,aAAa,EACbC,SAAU,OACVC,KAAM/H,IACLgI,KAAK,SAAAC,GAAA,IAAoBC,EAApBD,EAAGF,KAAQI,QAAX,OACNnD,EA3F4B,CAC9BhD,KAAMO,EACN8D,QAyF0B6B,QAIfE,GAAiB,SAAAC,GAAA,IAC5BC,EAD4BD,EAC5BC,GACQnI,EAFoBkI,EAE5BlI,KAAQA,KAFoBoI,EAAAF,EAG5BG,aAH4B,IAAAD,EAGpB,SAHoBA,EAAA,OAIxB,SAAAvD,GACJ,IAAMyD,EAAe,CAAEH,KAAInI,QACrBqH,EAAG,QAAAC,OAAWtH,EAAX,WAAAsH,OAAyBe,GAC5BE,EAAaC,UAAUnB,GACvBoB,EAAMC,KAAIH,GAEhBpB,KAAM,CACJC,OAAQ,OACRC,IAAG,GAAAC,OAAKxB,GAAL,UAAAwB,OAAiBa,EAAjB,yBACHZ,aAAa,EACbC,SAAU,sBACVC,aAAa,EACbC,aAAa,EACbC,SAAU,SACVC,KAAI,GAAAN,OAAKD,EAAL,eAAAC,OAAsBmB,KACzBZ,KACD,SAAAc,GAAA,MACkB,OADlBA,EAAGf,KACIgB,QAAmB/D,EA/GS,CACrChD,KAAMQ,EACN6D,QA6G2DoC,QAIhDO,GAAmB,SAAAC,GAAA,IAC9BX,EAD8BW,EAC9BX,GACAS,EAF8BE,EAE9BF,OAF8BG,EAAAD,EAG9BT,aAH8B,IAAAU,EAGtB,SAHsBA,EAAA,OAI1B,SAAAlE,GACJ,IAAMyD,EAAe,CAAEH,KAAIS,UACrBvB,EAAG,UAAAC,OAAasB,EAAb,WAAAtB,OAA6Be,GAChCE,EAAaC,UAAUnB,GACvBoB,EAAMC,KAAIH,GAEhBpB,KAAM,CACJC,OAAQ,OACRC,IAAG,GAAAC,OAAKxB,GAAL,UAAAwB,OAAiBa,EAAjB,yBACHZ,aAAa,EACbC,SAAU,sBACVC,aAAa,EACbC,aAAa,EACbC,SAAU,SACVC,KAAI,GAAAN,OAAKD,EAAL,eAAAC,OAAsBmB,KACzBZ,KACD,SAAAmB,GAAA,MACkB,OADlBA,EAAGpB,KACIgB,QAAmB/D,EAnIW,CACvChD,KAAMS,EACN4D,QAiI6DoC,QCxLzD/H,GAAS,CACb0I,SAAU,CACR3H,QAAS,OACTC,eAAgB,gBAChB2H,SAAU,MAIRC,GAAa,CACjB,CAAE7C,UAAW,KAAME,cAAe,CAAE4C,IAAK,MAAOC,KAAM,SACtD,CACE/C,UAAW,WACXE,cAAe,CAAE4C,IAAK,MAAOC,KAAM,SAErC,CAAE/C,UAAW,QAASE,cAAe,CAAE4C,IAAK,MAAOC,KAAM,SACzD,CAAE/C,UAAW,SAAUE,cAAe,CAAE4C,IAAK,MAAOC,KAAM,UAGtDC,8MAQJC,uBAAyB,SAACjD,EAAWE,GAAkB,IAAAgD,EAMjDC,EAAK/D,MAJPgE,EAFmDF,EAEnDE,KACAC,EAHmDH,EAGnDG,iBACAC,EAJmDJ,EAInDI,qBACAC,EALmDL,EAKnDK,mBAGIC,EACqB,QAAzBF,EAAiCpD,EAAc6C,KAAO7C,EAAc4C,IAetE,OAXMS,EADJF,IAAqBrD,EACE,CACjBoD,OACApD,YACAE,cAAeA,EAAc4C,KAEZ,CACjBM,OACApD,UAAWqD,EACXnD,cAAesD,6EAMhB,IAAAC,EAAA5E,KAAA6E,EAC4C7E,KAAKO,MAAhDiE,EADDK,EACCL,iBAAkBC,EADnBI,EACmBJ,qBAEpBK,EAAiBd,GAAWe,IAAI,SAAAC,GAAa,IACzC7D,EAA6B6D,EAA7B7D,UAAWE,EAAkB2D,EAAlB3D,cACb4D,EACJ9D,IAAcqD,EAAmBC,EAAuB,GAE1D,OACEnJ,EAAAC,EAAAC,cAACuD,EAAD,CACEmG,IAAK/D,EACL9G,iBAAe,EACfC,OAAQ6G,IAAcqD,EACtB7H,QAAS,kBAAMiI,EAAKR,uBAAuBjD,EAAWE,KAJxD,WAAAc,OAKchB,EALd,KAAAgB,OAK2B8C,MAK/B,OAAO3J,EAAAC,EAAAC,cAAA,OAAKC,MAAOL,GAAO0I,UAAWgB,UAtDfK,aAqEXjF,eAXS,SAAAC,GAAK,MAAK,CAChCoE,KAAMpE,EAAMiF,MAAM7D,YAClBiD,iBAAkBrE,EAAMkF,KAAKlE,UAC7BsD,qBAAsBtE,EAAMkF,KAAKhE,gBAGR,SAAA3B,GAAQ,MAAK,CACtCgF,mBAAoB,SAAA1J,GAAA,IAAGuJ,EAAHvJ,EAAGuJ,KAAMpD,EAATnG,EAASmG,UAAWE,EAApBrG,EAAoBqG,cAApB,OAClB3B,EDc4B,SAAA4F,GAAA,IAC9Bf,EAD8Be,EAC9Bf,KACApD,EAF8BmE,EAE9BnE,UACAE,EAH8BiE,EAG9BjE,cAH8B,OAI1B,SAAA3B,GACJA,EAASkB,MACTlB,EAASwB,GAAgBC,IACzBzB,EAAS0B,GAAoBC,IAE7BW,KACGuD,IADH,GAAApD,OAEOxB,GAFP,iBAAAwB,OAE0BhB,EAF1B,oBAAAgB,OAEsDd,EAFtD,UAAAc,OAE4EoC,EAF5E,yBAIG7B,KAAK,SAAA8C,GAAoE,IAAAC,EAAAD,EAAjE/C,KAAQI,QAAW/B,EAA8C2E,EAA9C3E,MAAyBW,EAAqBgE,EAAvCC,iBACjChG,EAASmB,GAAkBC,IAC3BpB,EAAS8B,GAAkBmE,OAAOlE,OAEnCmE,MAAM,SAAAC,GAAG,OAAInG,EAASsB,GAAe6E,OC/B7BC,CAAiB,CAAEvB,OAAMpD,YAAWE,sBAGlCnB,CAGbiE,iCCzFI4B,GAAgB,CACpBnE,SAAU,GACVC,MAAO,GACPhH,KAAM,IAGFmL,8MAMJ7F,qBAAa4F,MAEbE,kBAAoB,SAAAjL,GAAA,IAAAkL,EAAAlL,EAAGmL,OAAUC,EAAbF,EAAaE,KAAMC,EAAnBH,EAAmBG,MAAnB,OAClB/B,EAAKgC,SAAL5K,OAAA6K,GAAA,EAAA7K,CAAA,GAAiB0K,EAAOC,OAE1BG,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAAAC,EAEgBrC,EAAKnE,MAA/ByB,EAFU+E,EAEV/E,SAAUC,EAFA8E,EAEA9E,MAAOhH,EAFP8L,EAEO9L,KAEzB,GAAiB,KAAb+G,GAA6B,KAAVC,GAAyB,KAAThH,EAAvC,CAGA,IAAM+H,EAAU0B,EAAKnE,MAErBmE,EAAK/D,MAAMqG,UAAUhE,GACrB0B,EAAK/D,MAAMsG,WACXvC,EAAKwC,iBAGPA,WAAa,kBAAMxC,EAAKgC,SAAL5K,OAAAC,EAAA,EAAAD,CAAA,GAAmBqK,8EAE7B,IAAAgB,EAC2B/G,KAAKG,MAA/ByB,EADDmF,EACCnF,SAAUC,EADXkF,EACWlF,MAAOhH,EADlBkM,EACkBlM,KACjBgM,EAAa7G,KAAKO,MAAlBsG,SAER,OACEvL,EAAAC,EAAAC,cAAA,QAAMwL,SAAUhH,KAAKwG,aAAcvK,UAAWb,KAAOX,MACnDa,EAAAC,EAAAC,cAAA,SACE4K,KAAK,WACLC,MAAOzE,EACP3F,UAAWb,KAAOZ,MAClByM,YAAY,YACZC,SAAUlH,KAAKiG,oBAEjB3K,EAAAC,EAAAC,cAAA,SACE4K,KAAK,QACLC,MAAOxE,EACP5F,UAAWb,KAAOZ,MAClByM,YAAY,QACZC,SAAUlH,KAAKiG,oBAEjB3K,EAAAC,EAAAC,cAAA,YACE4K,KAAK,OACLC,MAAOxL,EACPsM,KAAK,IACLlL,UAAWb,KAAOZ,MAClByM,YAAY,oBACZC,SAAUlH,KAAKiG,oBAEjB3K,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOT,SACrBW,EAAAC,EAAAC,cAACuD,EAAD,CAAQrC,KAAK,UAAb,QACApB,EAAAC,EAAAC,cAACuD,EAAD,CAAQpC,QAASkK,GAAjB,mBAzDe1B,aAoEVjF,eACb,KALyB,SAAAR,GAAQ,MAAK,CACtCkH,UAAW,SAAAlM,GAAI,OAAIgF,EAASgC,GAAQhH,OAGvBwF,CAGb8F,k2BClFF,IAAMoB,GAAoBC,KAAOC,IAAVC,MAKjBC,GAAOH,KAAOI,IAAVC,MAMJC,GAAiBN,KAAO7M,MAAMoN,MAAM,CAAElL,KAAM,YAA3B2K,CAAHQ,MAadC,GAAiBT,KAAOC,IAAVS,KAIJ,SAAAxH,GAAK,OAAKA,EAAMyH,QAAU,SAAW,cAIjDL,GAIAH,GACc,SAAAjH,GAAK,OAAKA,EAAMyH,QAAU,UAAY,WAIlDC,GAAW,SAAAjN,GAAA,IAAGiB,EAAHjB,EAAGiB,UAAW+L,EAAdhN,EAAcgN,QAAS5N,EAAvBY,EAAuBZ,SAAamG,EAApC7E,OAAA8E,EAAA,EAAA9E,CAAAV,EAAA,2CACfM,EAAAC,EAAAC,cAAC4L,GAAD,CAAmBnL,UAAWA,GAC5BX,EAAAC,EAAAC,cAACmM,GAADjM,OAAAwM,OAAA,CAAgBF,QAASA,EAAS5N,SAAUA,GAAcmG,IAC1DjF,EAAAC,EAAAC,cAACsM,GAAD,CAAgBE,QAASA,EAAS5N,SAAUA,GAC1CkB,EAAAC,EAAAC,cAACgM,GAAD,CAAMW,QAAQ,aACZ7M,EAAAC,EAAAC,cAAA,YAAU4M,OAAO,uBAYzBH,GAASlM,aAAe,CACtBE,UAAW,GACX+L,SAAS,EACT5N,UAAU,GAGG6N,8BC7DMI,8MAOnBlI,MAAQ,CACNtF,KAAMyJ,EAAK/D,MAAM1F,QAGnBoL,kBAAoB,SAAAjL,GAAA,IAAAkL,EAAAlL,EAAGmL,OAAUC,EAAbF,EAAaE,KAAMC,EAAnBH,EAAmBG,MAAnB,OAClB/B,EAAKgC,SAAL5K,OAAA6K,GAAA,EAAA7K,CAAA,GAAiB0K,EAAOC,OAE1BiC,kBAAoB,SAAA7B,GAClBA,EAAEC,iBAEFpC,EAAK/D,MAAMgI,cAAcjE,EAAKnE,UAGhCqI,iBAAmB,SAAA/B,GACjBA,EAAEC,iBAEFpC,EAAK/D,MAAMkI,uFAGJ,IACC5N,EAASmF,KAAKG,MAAdtF,KAER,OACES,EAAAC,EAAAC,cAAA,QAAMS,UAAWb,KAAOX,KAAMuM,SAAUhH,KAAKsI,mBAC3ChN,EAAAC,EAAAC,cAAA,YACE4K,KAAM,OACNC,MAAOxL,EACPsM,KAAM,EACNlL,UAAWb,KAAOZ,MAClB0M,SAAUlH,KAAKiG,oBAEjB3K,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOT,SACrBW,EAAAC,EAAAC,cAACuD,EAAD,CAAQrC,KAAK,UAAb,QACApB,EAAAC,EAAAC,cAACuD,EAAD,CAAQpC,QAASqD,KAAKwI,iBAAkB9L,KAAK,UAA7C,mBAxCiCyI,iCCIrCuD,8MAYJvI,MAAQ,CAAEwI,eAAe,EAAOX,SAAS,KAuBzCY,YAAc,kBAAMtE,EAAKgC,SAAS,CAAEqC,eAAe,OAEnDE,UAAY,kBAAMvE,EAAKgC,SAAS,CAAEqC,eAAe,OAEjDG,qBAAuB,SAAA9N,GAA6B,IAAhBgN,EAAgBhN,EAA1BmL,OAAU6B,QAClC1D,EAAKgC,SAAS,CAAE0B,WAAW,WACzB,IAAMvE,EAASa,EAAKnE,MAAM6H,QAAU,GAAK,EAEzC1D,EAAK/D,MAAMwI,mBAAmB,CAC5B/F,GAAIsB,EAAK/D,MAAMyC,GACfS,gBAKNuF,aAAe,SAAAnO,GACbyJ,EAAK/D,MAAM0I,iBAAiB,CAAEjG,GAAIsB,EAAK/D,MAAMyC,GAAInI,SACjDyJ,EAAKuE,gGArCqB,KAAtB7I,KAAKO,MAAMkD,QACbzD,KAAKsG,SAAS,CACZ0B,SAAS,kDAKOkB,EAAWC,GAC/B,IAAMC,EACJF,EAAUrO,OAASmF,KAAKO,MAAM1F,MAC9BqO,EAAUzF,SAAWzD,KAAKO,MAAMkD,QAChCyF,EAAU9I,gBAAkBJ,KAAKO,MAAMH,cAEnCiJ,EACJrJ,KAAKG,MAAMwI,gBAAkBQ,EAAUR,eACvC3I,KAAKG,MAAM6H,UAAYmB,EAAUnB,QAEnC,OAAOoB,GAAgBC,mCAuBhB,IAAAhF,EAC8CrE,KAAKO,MAAlDyC,EADDqB,EACCrB,GAAIpB,EADLyC,EACKzC,SAAUC,EADfwC,EACexC,MAAOhH,EADtBwJ,EACsBxJ,KAAMuF,EAD5BiE,EAC4BjE,cAD5BuG,EAE4B3G,KAAKG,MAAhC6H,EAFDrB,EAECqB,QAASW,EAFVhC,EAEUgC,cAEjB,OACErN,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOV,MACrBY,EAAAC,EAAAC,cAAA,SAAO8N,QAAStG,EAAIvH,MAAO,CAAE8N,aAAc,IACzCjO,EAAAC,EAAAC,cAACgO,GAAD,CACExG,GAAIA,EACJgF,QAASA,EACT5N,UAAWgG,EACX8G,SAAUlH,KAAK8I,uBAEjBxN,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEgO,WAAY,IACxBzB,EAAU,YAAc,gBAG7B1M,EAAAC,EAAAC,cAAA,KAAGS,UAAWb,KAAOP,MACnBS,EAAAC,EAAAC,cAAA,QAAMS,UAAWb,KAAOR,OAAxB,cACCgH,GAEHtG,EAAAC,EAAAC,cAAA,KAAGS,UAAWb,KAAOP,MACnBS,EAAAC,EAAAC,cAAA,QAAMS,UAAWb,KAAOR,OAAxB,WACCiH,GAEF8G,EACCrN,EAAAC,EAAAC,cAACkO,GAAD,CACE7O,KAAMA,EACN0N,cAAevI,KAAKgJ,aACpBP,YAAazI,KAAK6I,YAGpBvN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoO,SAAA,KACErO,EAAAC,EAAAC,cAAA,KAAGS,UAAWb,KAAOP,MACnBS,EAAAC,EAAAC,cAAA,QAAMS,UAAWb,KAAOR,OAAxB,UACCC,GAEHS,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOT,SACrBW,EAAAC,EAAAC,cAACuD,EAAD,CAAQ3E,UAAWgG,EAAezD,QAASqD,KAAK4I,aAAhD,kBA7FKzD,aAiHJjF,eATS,SAAAC,GAAK,MAAK,CAChCC,cAAeD,EAAME,KAAKD,gBAGD,SAAAV,GAAQ,MAAK,CACtCuJ,iBAAkB,SAAA9F,GAAY,OAAIzD,EAASoD,GAAeK,KAC1D4F,mBAAoB,SAAA5F,GAAY,OAAIzD,EAASgE,GAAiBP,OAGjDjD,CAGbwI,ICtHakB,GANO,SAAA5O,GAAA,IAAGH,EAAHG,EAAGH,KAAH,OAAcS,EAAAC,EAAAC,cAAA,SAAIX,kCCGlCyB,GAAKC,IAAWC,KAAKpB,MAErBqB,GAAS,SAAAzB,GAAmD,IAAhD0B,EAAgD1B,EAAhD0B,KAAMpC,EAA0CU,EAA1CV,OAAQF,EAAkCY,EAAlCZ,SAAUiB,EAAwBL,EAAxBK,SAAUsB,EAAc3B,EAAd2B,QAC5CC,EAASN,GAAG,CAChBnC,QAAQ,EACRG,SACAF,aAGF,OACEkB,EAAAC,EAAAC,cAAA,UACES,UAAWW,EACXxC,SAAUA,EACVsC,KAAMA,EACNC,QAASA,GACRtB,IAaPoB,GAAOV,aAAe,CACpBW,KAAM,SACNpC,QAAQ,EACRF,UAAU,EACViB,SAAU,GACVsB,QAAS,cAGIF,UClCTrB,GAAS,CACbyC,KAAM,CACJ1B,QAAS,OACTC,eAAgB,SAChByN,YAAa,EACb/L,UAAW,SAITgM,8MAqBJ3J,MAAQ,CAAEiF,MAAO,MAmBjB2E,QAAU,SAAAxF,GAAQ,IAAAF,EAC2CC,EAAK/D,MAAxDyJ,EADQ3F,EACR2F,WAAYC,EADJ5F,EACI4F,SAAU9I,EADdkD,EACclD,UAAWE,EADzBgD,EACyBhD,cAEnC6I,EAAaC,KAAKC,KAAKJ,EAAaC,GAEtC7E,EAAQd,EAAKnE,MAAMiF,MAEnBb,EAAO,GAAKA,EAAO2F,IAKvB9E,EAAQd,EAAK+F,SAASL,EAAYzF,EAAM0F,GAGxC3F,EAAKgC,SAAS,CAAElB,UAGhBd,EAAK/D,MAAM+J,aAAa/F,EAAMpD,EAAWE,OAG3CgJ,SAAW,SAACL,EAAYzI,EAAa0I,GAEnC,IAEIM,EACAC,EAHEN,EAAaC,KAAKC,KAAKJ,EAAaC,GAItCC,GAAc,IAEhBK,EAAY,EACZC,EAAUN,GAIN3I,GAAe,GACjBgJ,EAAY,EACZC,EAAU,IACDjJ,EAAc,GAAK2I,GAC5BK,EAAYL,EAAa,EACzBM,EAAUN,IAEVK,EAAYhJ,EAAc,EAC1BiJ,EAAUjJ,EAAc,GAK5B,IAAMkJ,GAAclJ,EAAc,GAAK0I,EACjCS,EAAWP,KAAKQ,IAAIF,EAAaR,EAAW,EAAGD,EAAa,GAG5DY,EAAQlP,OAAAmP,GAAA,EAAAnP,CAAIoP,MAAMN,EAAU,EAAID,GAAWQ,QAAQhG,IACvD,SAAAiG,GAAC,OAAIT,EAAYS,IAInB,MAAO,CACLhB,aACAzI,cACA0I,WACAC,aACAK,YACAC,UACAC,aACAC,WACAE,6FAhFE5K,KAAKO,MAAM0K,OAASjL,KAAKO,MAAM0K,MAAMC,QACvClL,KAAK+J,QAAQ/J,KAAKO,MAAM4K,wDAITC,GAGfpL,KAAKO,MAAM4K,cAAgBC,EAAUD,aACrCnL,KAAKO,MAAMyJ,aAAeoB,EAAUpB,YAEpChK,KAAK+J,QAAQ/J,KAAKO,MAAM4K,8CAyEnB,IAAAvG,EAAA5E,KACCoF,EAAUpF,KAAKG,MAAfiF,MAER,OAAKA,EAAMwF,OAASxF,EAAMwF,MAAMM,QAAU,EACjC,KAIP5P,EAAAC,EAAAC,cAAA,MAAIC,MAAOL,GAAOyC,MAChBvC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6P,GAAD,CACEjR,SAAgC,IAAtBgL,EAAM7D,YAChB5E,QAAS,kBAAMiI,EAAKmF,QAAQ,KAF9B,UAMFzO,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6P,GAAD,CACEjR,SAAgC,IAAtBgL,EAAM7D,YAChB5E,QAAS,kBAAMiI,EAAKmF,QAAQ3E,EAAM7D,YAAc,KAFlD,aAMD6D,EAAMwF,MAAM7F,IAAI,SAAAR,GAAI,OACnBjJ,EAAAC,EAAAC,cAAA,MAAI0J,IAAKX,GACPjJ,EAAAC,EAAAC,cAAC6P,GAAD,CACE/Q,OAAQ8K,EAAM7D,cAAgBgD,EAC9B5H,QAAS,kBAAMiI,EAAKmF,QAAQxF,KAC3BA,MAIPjJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6P,GAAD,CACEjR,SAAUgL,EAAM7D,cAAgB6D,EAAM8E,WACtCvN,QAAS,kBAAMiI,EAAKmF,QAAQ3E,EAAM7D,YAAc,KAFlD,SAMFjG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6P,GAAD,CACEjR,SAAUgL,EAAM7D,cAAgB6D,EAAM8E,WACtCvN,QAAS,kBAAMiI,EAAKmF,QAAQ3E,EAAM8E,cAFpC,iBArJU/E,aAAd2E,GAWG/N,aAAe,CACpBkP,MAAO,GACPjB,WAAY,KACZmB,YAAa,EACblB,SAAU,EACV9I,UAAW,GACXE,cAAe,GACfiJ,aAAc,kBAAM,OA8IxB,IAcepK,eAdS,SAAAC,GAAK,MAAK,CAChC8K,MAAO9K,EAAMW,MAAM2B,KACnBuH,WAAY7J,EAAMiF,MAAM4E,WACxBmB,YAAahL,EAAMiF,MAAM7D,YACzB0I,SAAU9J,EAAMiF,MAAM6E,SACtB9I,UAAWhB,EAAMkF,KAAKlE,UACtBE,cAAelB,EAAMkF,KAAKhE,gBAGD,SAAA3B,GAAQ,MAAK,CACtC4K,aAAc,SAAC/F,EAAMpD,EAAWE,GAAlB,OACZ3B,ERpGkC,SACpC6E,EACApD,EACAE,GAHoC,OAIjC,SAAA3B,GACHA,EAAS4B,GAAWiD,IAEpBvC,KACGuD,IADH,GAAApD,OAEOxB,GAFP,iBAAAwB,OAE0BhB,EAF1B,oBAAAgB,OAEsDd,EAFtD,UAAAc,OAE4EoC,EAF5E,yBAIG7B,KAAK,SAAApC,GAAoE,IAAAgL,EAAAhL,EAAjEmC,KAAQI,QAAW/B,EAA8CwK,EAA9CxK,MAAyBW,EAAqB6J,EAAvC5F,iBACjChG,EAASmB,GAAkBC,IAC3BpB,EAAS8B,GAAkBmE,OAAOlE,OAEnCmE,MAAM,SAAAC,GAAG,OAAInG,EAASsB,GAAe6E,OQqF7B0F,CAAuBhH,EAAMpD,EAAWE,OAGtCnB,CAGb4J,wBC1Ja5J,eAJS,SAAAC,GAAK,MAAK,CAChCW,OCrC8BA,EDqCPX,EAAMW,MAAM2B,KCrCE+I,EDqCIrL,EAAMqL,OCpC/C1K,EAAM0K,OACJ,SAAA9Q,GAAI,OAAIA,EAAKkH,SAAS6J,SAASD,IAAW9Q,EAAKmH,MAAM4J,SAASD,OAFnC,IAAC1K,EAAO0K,GD0CrC,KAFatL,CA5BE,SAAAlF,GAAA,IAAG8F,EAAH9F,EAAG8F,MAAUP,EAAb7E,OAAA8E,EAAA,EAAA9E,CAAAV,EAAA,kBACf8F,EAAMoK,OAAS,EACb5P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoO,SAAA,KACErO,EAAAC,EAAAC,cAACkQ,GAAAnQ,EAAD,CAASU,UAAWb,KAAOyC,KAAM8N,YAAa,MAC3C7K,EAAMiE,IAAI,SAAArK,GAAI,OACbY,EAAAC,EAAAC,cAAA,MAAI0J,IAAKxK,EAAKsI,GAAI/G,UAAWb,KAAOwQ,MAClCtQ,EAAAC,EAAAC,cAACqQ,GAADnQ,OAAAwM,OAAA,GAAUxN,EAAU6F,QAI1BjF,EAAAC,EAAAC,cAACsQ,GAAD,OAGFxQ,EAAAC,EAAAC,cAACuQ,GAAD,CAAelR,KAAK,0EEpBlBmR,GAAQ,SAAAhR,GAAA,IAAG0B,EAAH1B,EAAG0B,KAAM0J,EAATpL,EAASoL,KAAMC,EAAfrL,EAAeqL,MAAOY,EAAtBjM,EAAsBiM,YAAaC,EAAnClM,EAAmCkM,SAAnC,OACZ5L,EAAAC,EAAAC,cAAA,SACEkB,KAAMA,EACN0J,KAAMA,EACNC,MAAOA,EACPpK,UAAWb,KAAOZ,MAClByM,YAAaA,EACbC,SAAUA,KAYd8E,GAAMjQ,aAAe,CACnBW,KAAM,OACNuK,YAAa,IAGA+E,+BCIA9L,eARS,SAAAC,GAAK,MAAK,CAChCqL,OAAQrL,EAAMqL,SAGW,SAAA9L,GAAQ,MAAK,CACtCuM,eAAgB,SAAAT,GAAM,OAAI9L,EZoCA,SAAA8L,GAAM,MAAK,CACrC9O,KAAMc,EACNuD,QAASyK,GYtC0BU,CAAaV,OAGnCtL,CAxBI,SAAAlF,GAAA,IAAGwQ,EAAHxQ,EAAGwQ,OAAQS,EAAXjR,EAAWiR,eAAX,OACjB3Q,EAAAC,EAAAC,cAAA,QAAMS,UAAWb,KAAOX,MACtBa,EAAAC,EAAAC,cAAC2Q,GAAD,CACE/F,KAAK,OACLC,MAAOmF,EACPvE,YAAY,kCACZC,SAAU,SAAAkF,GAAA,IAAa/F,EAAb+F,EAAGjG,OAAUE,MAAb,OAA2B4F,EAAe5F,SCNpDjL,GAAS,CACbmJ,KAAM,CACJpI,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBiQ,SAAU,GAEZ5R,KAAM,CACJ0B,QAAS,OACTmQ,cAAe,SACflQ,eAAgB,gBAChBC,WAAY,SACZkQ,OAAQ,KAEVC,WAAY,CACVrQ,QAAS,OACTmQ,cAAe,WAIbvG,GAAgB,CAAE0G,MAAO,GAAIC,SAAU,IAEvCC,8MAWJxM,qBAAa4F,MAMb6G,oBAAsB,WAAM,IAAAvI,EACSC,EAAK/D,MAAhCH,EADkBiE,EAClBjE,cAAeyM,EADGxI,EACHwI,QAEnBzM,GACFyM,EAAQC,KAAK,QAIjB7G,kBAAoB,SAAAjL,GAAA,IAAAkL,EAAAlL,EAAGmL,OAAUC,EAAbF,EAAaE,KAAMC,EAAnBH,EAAmBG,MAAnB,OAClB/B,EAAKgC,SAAL5K,OAAA6K,GAAA,EAAA7K,CAAA,GAAiB0K,EAAOC,OAE1BG,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAAAC,EAEUrC,EAAKnE,MAAzBsM,EAFU9F,EAEV8F,MAAOC,EAFG/F,EAEH+F,SAED,KAAVD,GAA6B,KAAbC,IAEpBpI,EAAK/D,MAAMwM,OAAXrR,OAAAC,EAAA,EAAAD,CAAA,GAAuB4I,EAAKnE,QAC5BmE,EAAKwC,iBAGPA,WAAa,WACXxC,EAAKgC,SAAL5K,OAAAC,EAAA,EAAAD,CAAA,GAAmBqK,0FAzBnB/F,KAAK4M,uDA4BE,IAAA7F,EACqB/G,KAAKG,MAAzBsM,EADD1F,EACC0F,MAAOC,EADR3F,EACQ2F,SACPG,EAAY7M,KAAKO,MAAjBsM,QAER,OACEvR,EAAAC,EAAAC,cAAA,OAAKC,MAAOL,GAAOmJ,MACjBjJ,EAAAC,EAAAC,cAAA,QAAMC,MAAOL,GAAOX,KAAMuM,SAAUhH,KAAKwG,cACvClL,EAAAC,EAAAC,cAAA,OAAKC,MAAOL,GAAOoR,YACjBlR,EAAAC,EAAAC,cAAC2Q,GAAD,CACEzP,KAAK,OACL0J,KAAK,QACLC,MAAOoG,EACPxF,YAAY,QACZC,SAAUlH,KAAKiG,oBAEjB3K,EAAAC,EAAAC,cAAC2Q,GAAD,CACEzP,KAAK,WACL0J,KAAK,WACLC,MAAOqG,EACPzF,YAAY,WACZC,SAAUlH,KAAKiG,qBAGnB3K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuD,EAAD,CAAQrC,KAAK,UAAb,SACApB,EAAAC,EAAAC,cAACuD,EAAD,CAAQpC,QAAS,kBAAMkQ,EAAQC,KAAK,OAApC,kBAnEY3H,aAAlBwH,GAOG5Q,aAAe,CACpB8Q,QAAS,IAmEb,IAIMpN,GAAqB,CAAEsN,OftGP,SAAAC,GAAW,OAAI,SAAAtN,GACnCA,EAAS,CAAEhD,KAAMe,ICRG,SAAAzC,GAAyB,IAAtByR,EAAsBzR,EAAtByR,MAAOC,EAAe1R,EAAf0R,SAC9B,OAAO,IAAI/M,QAAQ,SAACC,EAASqN,GAC3BpN,WAAW,WACLhD,IAAgB4P,EAKhB5P,IAAmB6P,EAKvB9M,EAAQ,CACN6M,MAAO5P,EACP6P,SAAU7P,IANVoQ,EAAO,qBALPA,EAAO,wBAaR,ODPLC,CAAWF,GAAatK,KACtB,SAAAyK,GACEzN,EAAS,CAAEhD,KAAMgB,EAAiBqD,QAASoM,IAC3CzN,EAAS,CAAEhD,KFKW,kBEHxB,SAAAuE,GAAK,OAAIvB,EAAS,CAAEhD,KAAMiB,EAAcoD,QAASE,SegGtCf,eANS,SAAAC,GAAK,MAAK,CAChCC,cAAeD,EAAME,KAAKD,gBAO1BX,GAFaS,CAGbyM,uBC9GIS,GAAS,SAAApS,GAAA,IAAGE,EAAHF,EAAGE,MAAOqR,EAAVvR,EAAUuR,OAAV,OACbjR,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOtC,UACrBwC,EAAAC,EAAAC,cAAA,OAAKS,UAAWb,KAAOrC,iBAAkB0C,MAAO,CAAEP,QAAOqR,WACvDjR,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOiS,WAAZ,KAAAlL,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOlC,WAAZ,KAAAiJ,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOjC,WAAZ,KAAAgJ,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOhC,WAAZ,KAAA+I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO/B,WAAZ,KAAA8I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO9B,WAAZ,KAAA6I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO7B,WAAZ,KAAA4I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO5B,WAAZ,KAAA2I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO3B,WAAZ,KAAA0I,OAA0B/G,KAAOpC,aAC/CsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAO1B,YAAZ,KAAAyI,OAA2B/G,KAAOpC,aAChDsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOzB,YAAZ,KAAAwI,OAA2B/G,KAAOpC,aAChDsC,EAAAC,EAAAC,cAAA,OAAKS,UAAS,GAAAkG,OAAK/G,KAAOxB,YAAZ,KAAAuI,OAA2B/G,KAAOpC,gBAUtDoU,GAAOrR,aAAe,CACpBb,MAAO,GACPqR,OAAQ,IAGKa,UCffE,IAAMC,cAAc,SAEpB,IAAMnS,GAAS,CACboS,MAAO,CACLC,QAAS,CAAEC,gBAAiB,sBAC5BC,QAAS,CACPzS,MAAO,IACPqR,OAAQ,IACRqB,IAAK,MACLC,KAAM,MACNC,UAAW,2BAKXC,8MAaJ5N,MAAQ,CACN6N,aAAa,KAafC,gBAAkB,kBAAM3J,EAAKgC,SAAS,CAAE0H,aAAa,OAErDE,iBAAmB,kBAAM5J,EAAKgC,SAAS,CAAE0H,aAAa,wFAZlC,IAAA3J,EACqCrE,KAAKO,MAApDgE,EADUF,EACVE,KAAMpD,EADIkD,EACJlD,UAAWE,EADPgD,EACOhD,eAEzB8M,EAHkB9J,EACsB8J,YAE7B,CACT5J,OACApD,YACAE,mDAQK,IACC2M,EAAgBhO,KAAKG,MAArB6N,YACAI,EAAcpO,KAAKO,MAAnB6N,UAER,OACE9S,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQ2P,SAAS,qBACf/S,EAAAC,EAAAC,cAAC8S,EAAD,KACEhT,EAAAC,EAAAC,cAACuD,EAAD,CAAQpC,QAASqD,KAAKiO,iBAAtB,eACA3S,EAAAC,EAAAC,cAAC+S,GAAD,MACAjT,EAAAC,EAAAC,cAACgT,GAAD,MACAlT,EAAAC,EAAAC,cAACiT,GAAD,OAEFnT,EAAAC,EAAAC,cAACU,EAAD,KACGkS,EACC9S,EAAAC,EAAAC,cAACkT,GAAD,CAAQxT,MAAO,GAAIqR,OAAQ,KAE3BjR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoO,SAAA,KACErO,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjCzT,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWE,MAGpC1T,EAAAC,EAAAC,cAACyT,EAAA1T,EAAD,CACE2T,OAAQlB,EACRmB,eAAgBnP,KAAKkO,iBACrBkB,aAAa,eACb3T,MAAOL,GAAOoS,OACdlS,EAAAC,EAAAC,cAAC6T,GAAD,CAAYxI,SAAU7G,KAAKkO,6BAzDrB/I,aAAZ4I,GASGhS,aAAe,CACpBqS,WAAW,GAuDf,IAOelO,eAPS,SAAAC,GAAK,MAAK,CAChCiO,UAAWjO,EAAMW,MAAMwO,QACvB/K,KAAMpE,EAAMiF,MAAM7D,YAClBJ,UAAWhB,EAAMkF,KAAKlE,UACtBE,cAAelB,EAAMkF,KAAKhE,gBAK1B,CAAE8M,WfrCsB,SAAAnT,GAAA,IAAGuJ,EAAHvJ,EAAGuJ,KAAMpD,EAATnG,EAASmG,UAAWE,EAApBrG,EAAoBqG,cAApB,OAAwC,SAAA3B,GAChEA,EAASkB,MACTlB,EAAS4B,GAAWiD,IACpB7E,EAASwB,GAAgBC,IACzBzB,EAAS0B,GAAoBC,IAE7BW,KACGuD,IADH,GAAApD,OAEOxB,GAFP,iBAAAwB,OAE0BhB,EAF1B,oBAAAgB,OAEsDd,EAFtD,UAAAc,OAE4EoC,EAF5E,yBAIG7B,KAAK,SAAA0J,GAAoE,IAAAmD,EAAAnD,EAAjE3J,KAAQI,QAAW/B,EAA8CyO,EAA9CzO,MAAyBW,EAAqB8N,EAAvC7J,iBACjChG,EAASmB,GAAkBC,IAC3BpB,EAAS8B,GAAkBmE,OAAOlE,OAEnCmE,MAAM,SAAAC,GAAG,OAAInG,EAASsB,GAAe6E,SeqB3B3F,CAGb6N,2CC1CayB,kCAAgB,CAC7B/M,KArDF,WAAoD,IAA/BtC,EAA+BF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAvB,GAAuBjF,EAAAiF,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB1B,EAAjB0B,KAAMqE,EAAW/F,EAAX+F,QACvC,OAAQrE,GACN,KAAKK,EACH,OAAOgE,EACT,KAAK9D,EACH,SAAAkF,OAAAzG,OAAAmP,GAAA,EAAAnP,CAAWyE,GAAX,CAAkBY,IACpB,KAAK7D,EACH,OAAOiD,EAAM4E,IAAI,SAAArK,GAAI,OACnBA,EAAKsI,KAAOjC,EAAQiC,GAApBtH,OAAAC,EAAA,EAAAD,CAAA,GAA8BhB,EAA9B,CAAoCG,KAAMkG,EAAQlG,OAASH,IAE/D,KAAKyC,EACH,OAAOgD,EAAM4E,IAAI,SAAArK,GAAI,OACnBA,EAAKsI,KAAOjC,EAAQiC,GAApBtH,OAAAC,EAAA,EAAAD,CAAA,GAA8BhB,EAA9B,CAAoC+I,OAAQ1C,EAAQ0C,SAAW/I,IAGnE,QACE,OAAOyF,IAsCXmP,QAlCF,WAAiD,IAAzBnP,EAAyBF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,IAAAA,UAAA,GAC/C,QAD+CA,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,GAAR/S,MAErC,KAAKI,EACH,OAAO,EAET,KAAKC,EACL,KAAKE,EACL,KAAKC,EACL,KAAKC,EACL,KAAKH,EACH,OAAO,EAET,QACE,OAAOmD,IAsBXc,MAlBF,WAAuD,IAAjCd,EAAiCF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAzB,KAAyBK,EAAAL,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB4D,EAAjB5D,KAAMqE,EAAWT,EAAXS,QAC1C,OAAQrE,GACN,KAAKK,EACL,KAAKE,EACL,KAAKC,EACL,KAAKC,EACH,OAAO,KACT,KAAKH,EACH,OAAO+D,EAET,QACE,OAAOZ,MCpCEqP,kCAAgB,CAC7BrO,UArBF,WAAyD,IAA/BhB,EAA+BF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAvB,GAAuBjF,EAAAiF,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB1B,EAAjB0B,KAAMqE,EAAW/F,EAAX+F,QAC5C,OAAQrE,GACN,KAAKY,EACH,OAAOyD,EAET,QACE,OAAOZ,IAgBXkB,cAZF,WAA6D,IAA/BlB,EAA+BF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAvB,GAAuBmM,EAAAnM,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB0P,EAAjB1P,KAAMqE,EAAWqL,EAAXrL,QAChD,OAAQrE,GACN,KAAKa,EACH,OAAOwD,EAET,QACE,OAAOZ,MCtBPuP,GAAe,CACnB1F,WAAY,KACZzI,YAAa,EACb0I,SAAU,GCHZ,IAAMyF,GAAe,GCwDNF,kCAAgB,CAC7B3S,MA1CF,WAA2E,IAA5DsD,EAA4DF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAApD,CAAEwM,MAAO,KAAMC,SAAU,MAA2B1R,EAAAiF,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB1B,EAAjB0B,KAAMqE,EAAW/F,EAAX+F,QAC9D,OAAQrE,GACN,KAAKgB,EACH,OAAOqD,EAET,KAAKnD,EACH,MAAO,CAAEwI,KAAM,KAAMqG,MAAO,MAE9B,QACE,OAAOtM,IAkCXC,cA9BF,WAAgD,IAAzBD,EAAyBF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,IAAAA,UAAA,GAC9C,QAD8CA,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,GAAR/S,MAEpC,KAAKgB,EACH,OAAO,EAET,KAAKE,EACH,OAAO,EAET,QACE,OAAOuC,IAsBXc,MAlBF,WAAgD,IAAjCd,EAAiCF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAzB,KAAyBK,EAAAL,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB4D,EAAjB5D,KAAMqE,EAAWT,EAAXS,QACnC,OAAQrE,GACN,KAAKe,EACL,KAAKC,EACL,KAAKE,EACH,OAAO,KAET,KAAKD,EACH,OAAOoD,EAET,QACE,OAAOZ,MCvCEwP,GARKH,2BAAgB,CAClC1O,MAAO8O,GACPxK,MHDa,WAA+D,IAAzCjF,EAAyCF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAjCyP,GAAiC1U,EAAAiF,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB1B,EAAjB0B,KAAMqE,EAAW/F,EAAX+F,QACjE,OAAQrE,GACN,KAAKU,EACH,OAAO1B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBoB,YAAaR,IAElC,KAAK1D,EACH,OAAO3B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB6J,WAAYjJ,IAEjC,QACE,OAAOZ,IGPXkF,KAAMwK,GACNrE,OFPa,WAAgE,IAAzCrL,EAAyCF,UAAAiL,OAAA,QAAAuE,IAAAxP,UAAA,GAAAA,UAAA,GAAjCyP,GAAiC1U,EAAAiF,UAAAiL,OAAA,EAAAjL,UAAA,QAAAwP,EAAjB/S,EAAiB1B,EAAjB0B,KAAMqE,EAAW/F,EAAX+F,QAClE,OAAQrE,GACN,KAAKc,EACH,OAAOuD,EAET,QACE,OAAOZ,IEEXE,KAAMyP,KCTOC,GAHD,SAAA/U,GAAA,IAAG0E,EAAH1E,EAAG0E,SAAUsQ,EAAbhV,EAAagV,SAAb,OAA4B,SAAAzQ,GAAI,OAAI,SAAA0Q,GAAM,MACpC,oBAAXA,EAAwBA,EAAOvQ,EAAUsQ,GAAYzQ,EAAK0Q,MCSpD5P,GARF,SAAA6P,GAAK,OAAI,SAAA3Q,GAAI,OAAI,SAAA0Q,GACxBA,EAAOvT,M3BiBe,iB2BjBPuT,EAAOvT,MACxByT,aAAaC,QAAQ,UAAWC,KAAKC,UAAUJ,EAAMF,WAAW3P,OAGlEd,EAAK0Q,MCADM,GAAa,CAACC,KAAQT,GAAOU,IAE7BC,GAAWC,+BAAoBC,mBAAe7Q,WAAf,EAAmBwQ,KAEpDM,GAAe,KAEnB,IACEA,GAAeR,KAAKS,MAAMX,aAAaY,QAAQ,YAC/C,MAAOlL,IACPmL,QAAQC,IAAIpL,IAGd,IAAMqL,GAAiBL,GAAe,CAAExQ,KAAMwQ,IAAiB,GAIhDX,GAFDiB,uBAAYxB,GAAauB,GAAgBR,WCdvDU,IAASC,OACP/V,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUpB,MAAOA,IACf5U,EAAAC,EAAAC,cAAC+V,GAAD,OAEFC,SAASC,eAAe,6BCV1B7Y,EAAAC,QAAA,CAAkB4B,KAAA,qBAAAD,MAAA,sBAAAG,QAAA,6CCAlB/B,EAAAC,QAAA,CAAkB8B,QAAA,wBAAAH,MAAA,2CCAlB5B,EAAAC,QAAA,CAAkBgF,KAAA,qBAAA+N,KAAA","file":"static/js/main.d7d894b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"styles_backdrop__2t4OA\",\"sk_fading_circle\":\"styles_sk_fading_circle__39IHD\",\"sk_circle\":\"styles_sk_circle__2FoAZ\",\"sk_circleFadeDelay\":\"styles_sk_circleFadeDelay__1B51_\",\"sk_circle2\":\"styles_sk_circle2__2ysvU\",\"sk_circle3\":\"styles_sk_circle3__3irs6\",\"sk_circle4\":\"styles_sk_circle4__3LPuk\",\"sk_circle5\":\"styles_sk_circle5__1h_P3\",\"sk_circle6\":\"styles_sk_circle6__EPKZu\",\"sk_circle7\":\"styles_sk_circle7__2IU-C\",\"sk_circle8\":\"styles_sk_circle8__3DUF1\",\"sk_circle9\":\"styles_sk_circle9__2evuB\",\"sk_circle10\":\"styles_sk_circle10__mfra8\",\"sk_circle11\":\"styles_sk_circle11__ED2fr\",\"sk_circle12\":\"styles_sk_circle12__2duDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1kyWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-accent-color\":\"#2196f3\",\"secondary-accent-color\":\"#1967d2\",\"primary-white-color\":\"#fff\",\"orange-accent-color\":\"#ffa500\",\"limegreen-accent-color\":\"#32cd32\",\"button\":\"styles_button__zgeng\",\"disabled\":\"styles_disabled__2JPiG styles_button__zgeng\",\"isOrangeBgColor\":\"styles_isOrangeBgColor__3l0k5\",\"active\":\"styles_active__1pxFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-accent-color\":\"#2196f3\",\"secondary-accent-color\":\"#1967d2\",\"primary-white-color\":\"#fff\",\"button\":\"styles_button__1j0L1\",\"disabled\":\"styles_disabled__M6jjl\",\"active\":\"styles_active__t9NFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-dark-color\":\"#424242\",\"primary-accent-color\":\"#2196f3\",\"input\":\"styles_input__3TbE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2nYEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-dark-color\":\"#424242\",\"task\":\"styles_task__2LWdY\",\"actions\":\"styles_actions__1aErr\",\"title\":\"styles_title__3FPOa\",\"text\":\"styles_text__3oDhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary-font-stack\":\"Roboto, Tahoma, sans-serif\",\"primary-white-color\":\"#fff\"};","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ width = 1170, styles = {}, children }) => (\n  <div\n    style={{ maxWidth: width, margin: '0 auto', padding: '0 16px', ...styles }}>\n    {children}\n  </div>\n);\n\nContainer.propTypes = {\n  width: PropTypes.number,\n  styles: PropTypes.shape({}),\n  children: PropTypes.node,\n};\n\nContainer.defaultProps = {\n  width: 1170,\n  styles: {},\n  children: [],\n};\n\nexport default Container;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Containers\nimport Container from '../ui/container';\n// Instruments\nimport styles from './styles.module.css';\n\nconst AppBar = ({ children }) => (\n  <header className={styles.header}>\n    <Container\n      styles={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}>\n      {children}\n    </Container>\n  </header>\n);\n\nAppBar.propTypes = {\n  children: PropTypes.node,\n};\n\nAppBar.defaultProps = {\n  children: [],\n};\n\nexport default AppBar;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n// Instruments\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\nconst Button = ({\n  type,\n  active,\n  disabled,\n  children,\n  isOrangeBgColor,\n  onClick,\n}) => {\n  const btnCls = cx({\n    button: true,\n    isOrangeBgColor,\n    active,\n    disabled,\n  });\n\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      className={btnCls}\n      onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  isOrangeBgColor: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.shape({}),\n  ]),\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  active: false,\n  disabled: false,\n  isOrangeBgColor: false,\n  children: '',\n  onClick: () => {},\n};\n\nexport default Button;\n","export default {\n  login: 'admin',\n  password: '123',\n};\n","export const FETCH_TASKS_START = 'FETCH_TASKS_START';\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS';\nexport const FETCH_TASKS_FAIL = 'FETCH_TASKS_FAIL';\n\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport const UPDATE_TASK_TEXT_SUCCESS = 'UPDATE_TASK_TEXT_SUCCESS';\nexport const UPDATE_TASK_STATUS_SUCCESS = 'UPDATE_TASK_STATUS_SUCCESS';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const UPDATE_TASKS_AMOUNT = 'UPDATE_TASKS_AMOUNT';\n\nexport const CHANGE_SORT_FIELD = 'CHANGE_SORT_FIELD';\nexport const CHANGE_SORT_DIRECTION = 'CHANGE_SORT_DIRECTION';\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAIL = 'SIGN_IN_FAIL';\nexport const SIGN_OUT = 'SIGN_IN_FAIL';\nexport const SAVE_SESSION = 'SAVE_SESSION';\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n// Components\nimport Button from '../shared/Button';\n// Instruments\nimport { signOut } from '../../redux/actions/auth';\n\nconst styles = {\n  list: {\n    display: 'flex',\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n  },\n  link: {\n    display: 'block',\n    padding: '8px',\n    fontFamily: 'inherit',\n    fontSize: 16,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n  },\n  activeLink: {\n    color: 'palevioletred',\n    border: '2px solid palevioletred',\n    borderRadius: 4,\n  },\n};\n\nconst PublicActions = () => (\n  <li>\n    <NavLink to=\"/login\" style={styles.link} activeStyle={styles.activeLink}>\n      Log in\n    </NavLink>\n  </li>\n);\n\nconst PrivateActions = ({ signOut }) => (\n  <li>\n    <Button\n      onClick={async () => {\n        await signOut();\n      }}>\n      Logout\n    </Button>\n  </li>\n);\n\nconst AuthManager = ({ authenticated, ...props }) => (\n  <ul style={styles.list}>\n    {authenticated ? (\n      <PrivateActions {...props} />\n    ) : (\n      <PublicActions {...props} />\n    )}\n  </ul>\n);\n\nPrivateActions.propTypes = {\n  signOut: PropTypes.func.isRequired,\n};\n\nAuthManager.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = { signOut };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthManager);\n","import * as api from '../../utils/authApi';\nimport {\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAIL,\n  SIGN_OUT,\n  SAVE_SESSION,\n} from './types';\n\nexport const signIn = credentials => dispatch => {\n  dispatch({ type: SIGN_IN_REQUEST });\n\n  api.signIn(credentials).then(\n    response => {\n      dispatch({ type: SIGN_IN_SUCCESS, payload: response });\n      dispatch({ type: SAVE_SESSION });\n    },\n    error => dispatch({ type: SIGN_IN_FAIL, payload: error }),\n  );\n};\n\nexport const signOut = () => async dispatch => {\n  await api.signOut();\n  dispatch({ type: SIGN_OUT });\n  dispatch({ type: SAVE_SESSION });\n};\n","import admin from '../admin';\n\nexport const signIn = ({ login, password }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (admin.login !== login) {\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        reject('Invalid password!');\n        return;\n      }\n\n      resolve({\n        login: admin.login,\n        password: admin.password,\n      });\n    }, 500);\n  });\n};\n\nexport const signOut = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n};\n","import axios from 'axios';\nimport MD5 from 'md5';\nimport {\n  FETCH_TASKS_START,\n  FETCH_TASKS_SUCCESS,\n  FETCH_TASKS_FAIL,\n  ADD_TASK_SUCCESS,\n  UPDATE_TASK_TEXT_SUCCESS,\n  UPDATE_TASK_STATUS_SUCCESS,\n  UPDATE_TASKS_AMOUNT,\n  CHANGE_SORT_FIELD,\n  CHANGE_SORT_DIRECTION,\n  CHANGE_PAGE,\n  CHANGE_FILTER,\n} from './types';\n\nconst URL = 'https://uxcandy.com/~shapoval/test-task-backend';\n\nconst fetchTasksStart = () => ({\n  type: FETCH_TASKS_START,\n});\n\nconst fetchTasksSuccess = tasks => ({\n  type: FETCH_TASKS_SUCCESS,\n  payload: tasks,\n});\n\nconst fetchTasksFail = error => ({\n  type: FETCH_TASKS_FAIL,\n  payload: error,\n});\n\nconst changeSortField = sortField => ({\n  type: CHANGE_SORT_FIELD,\n  payload: sortField,\n});\n\nconst changeSortDirection = sortDirection => ({\n  type: CHANGE_SORT_DIRECTION,\n  payload: sortDirection,\n});\n\nconst changePage = currentPage => ({\n  type: CHANGE_PAGE,\n  payload: currentPage,\n});\n\nconst updateTasksAmount = totalTasks => ({\n  type: UPDATE_TASKS_AMOUNT,\n  payload: totalTasks,\n});\n\nconst addTaskSuccess = task => ({\n  type: ADD_TASK_SUCCESS,\n  payload: task,\n});\n\nconst updateTaskTextSuccess = task => ({\n  type: UPDATE_TASK_TEXT_SUCCESS,\n  payload: task,\n});\n\nconst updateTaskStatusSuccess = task => ({\n  type: UPDATE_TASK_STATUS_SUCCESS,\n  payload: task,\n});\n\nexport const changeFilter = filter => ({\n  type: CHANGE_FILTER,\n  payload: filter,\n});\n\nexport const fetchTasks = ({ page, sortField, sortDirection }) => dispatch => {\n  dispatch(fetchTasksStart());\n  dispatch(changePage(page));\n  dispatch(changeSortField(sortField));\n  dispatch(changeSortDirection(sortDirection));\n\n  axios\n    .get(\n      `${URL}/?sort_field=${sortField}&sort_direction=${sortDirection}&page=${page}&developer=Stanislav`,\n    )\n    .then(({ data: { message: { tasks, total_task_count: totalTasks } } }) => {\n      dispatch(fetchTasksSuccess(tasks));\n      dispatch(updateTasksAmount(Number(totalTasks)));\n    })\n    .catch(err => dispatch(fetchTasksFail(err)));\n};\n\nexport const fetchTasksOnChangePage = (\n  page,\n  sortField,\n  sortDirection,\n) => dispatch => {\n  dispatch(changePage(page));\n\n  axios\n    .get(\n      `${URL}/?sort_field=${sortField}&sort_direction=${sortDirection}&page=${page}&developer=Stanislav`,\n    )\n    .then(({ data: { message: { tasks, total_task_count: totalTasks } } }) => {\n      dispatch(fetchTasksSuccess(tasks));\n      dispatch(updateTasksAmount(Number(totalTasks)));\n    })\n    .catch(err => dispatch(fetchTasksFail(err)));\n};\n\nexport const fetchSortedTasks = ({\n  page,\n  sortField,\n  sortDirection,\n}) => dispatch => {\n  dispatch(fetchTasksStart());\n  dispatch(changeSortField(sortField));\n  dispatch(changeSortDirection(sortDirection));\n\n  axios\n    .get(\n      `${URL}/?sort_field=${sortField}&sort_direction=${sortDirection}&page=${page}&developer=Stanislav`,\n    )\n    .then(({ data: { message: { tasks, total_task_count: totalTasks } } }) => {\n      dispatch(fetchTasksSuccess(tasks));\n      dispatch(updateTasksAmount(Number(totalTasks)));\n    })\n    .catch(err => dispatch(fetchTasksFail(err)));\n};\n\nexport const addTask = ({ username, email, text }) => dispatch => {\n  const task = new FormData();\n  task.append('username', username);\n  task.append('email', email);\n  task.append('text', text);\n\n  axios({\n    method: 'post',\n    url: `${URL}/create?developer=Stanislav`,\n    crossDomain: true,\n    mimeType: 'multipart/form-data',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    data: task,\n  }).then(({ data: { message: newTask } }) =>\n    dispatch(addTaskSuccess(newTask)),\n  );\n};\n\nexport const updateTaskText = ({\n  id,\n  text: { text },\n  token = 'beejee',\n}) => dispatch => {\n  const taskToUpdate = { id, text };\n  const url = `text=${text}&token=${token}`;\n  const encodedUrl = encodeURI(url);\n  const hex = MD5(encodedUrl);\n\n  axios({\n    method: 'post',\n    url: `${URL}/edit/${id}/?developer=Stanislav`,\n    crossDomain: true,\n    mimeType: 'multipart/form-data',\n    contentType: false,\n    processData: false,\n    dataType: 'string',\n    data: `${url}&signature=${hex}`,\n  }).then(\n    ({ data }) =>\n      data.status === 'ok' && dispatch(updateTaskTextSuccess(taskToUpdate)),\n  );\n};\n\nexport const updateTaskStatus = ({\n  id,\n  status,\n  token = 'beejee',\n}) => dispatch => {\n  const taskToUpdate = { id, status };\n  const url = `status=${status}&token=${token}`;\n  const encodedUrl = encodeURI(url);\n  const hex = MD5(encodedUrl);\n\n  axios({\n    method: 'post',\n    url: `${URL}/edit/${id}/?developer=Stanislav`,\n    crossDomain: true,\n    mimeType: 'multipart/form-data',\n    contentType: false,\n    processData: false,\n    dataType: 'string',\n    data: `${url}&signature=${hex}`,\n  }).then(\n    ({ data }) =>\n      data.status === 'ok' && dispatch(updateTaskStatusSuccess(taskToUpdate)),\n  );\n};\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport Button from '../shared/Button';\n// Instruments\nimport { fetchSortedTasks } from '../../redux/actions/tasks';\n\nconst styles = {\n  btnGroup: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    minWidth: 300,\n  },\n};\n\nconst sortParams = [\n  { sortField: 'id', sortDirection: { asc: 'asc', desc: 'desc' } },\n  {\n    sortField: 'username',\n    sortDirection: { asc: 'asc', desc: 'desc' },\n  },\n  { sortField: 'email', sortDirection: { asc: 'asc', desc: 'desc' } },\n  { sortField: 'status', sortDirection: { asc: 'asc', desc: 'desc' } },\n];\n\nclass SortManager extends Component {\n  static propTypes = {\n    page: PropTypes.number.isRequired,\n    currentSortField: PropTypes.string.isRequired,\n    currentSortDirection: PropTypes.string.isRequired,\n    onFetchSortedTasks: PropTypes.func.isRequired,\n  };\n\n  handleFetchSortedTasks = (sortField, sortDirection) => {\n    const {\n      page,\n      currentSortField,\n      currentSortDirection,\n      onFetchSortedTasks,\n    } = this.props;\n\n    const changedSortDirection =\n      currentSortDirection === 'asc' ? sortDirection.desc : sortDirection.asc;\n\n    const fetchTasks =\n      currentSortField !== sortField\n        ? onFetchSortedTasks({\n            page,\n            sortField,\n            sortDirection: sortDirection.asc,\n          })\n        : onFetchSortedTasks({\n            page,\n            sortField: currentSortField,\n            sortDirection: changedSortDirection,\n          });\n\n    return fetchTasks;\n  };\n\n  render() {\n    const { currentSortField, currentSortDirection } = this.props;\n\n    const sortButtonsJSX = sortParams.map(sortParam => {\n      const { sortField, sortDirection } = sortParam;\n      const renderSortDirection =\n        sortField === currentSortField ? currentSortDirection : '';\n\n      return (\n        <Button\n          key={sortField}\n          isOrangeBgColor\n          active={sortField === currentSortField}\n          onClick={() => this.handleFetchSortedTasks(sortField, sortDirection)}>\n          {`Sort by ${sortField} ${renderSortDirection}`}\n        </Button>\n      );\n    });\n\n    return <div style={styles.btnGroup}>{sortButtonsJSX}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  page: state.pager.currentPage,\n  currentSortField: state.sort.sortField,\n  currentSortDirection: state.sort.sortDirection,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchSortedTasks: ({ page, sortField, sortDirection }) =>\n    dispatch(fetchSortedTasks({ page, sortField, sortDirection })),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SortManager);\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport Button from '../shared/Button';\n// Instruments\nimport { addTask } from '../../redux/actions/tasks';\nimport styles from './styles.module.css';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  text: '',\n};\n\nclass TaskEditor extends Component {\n  static propTypes = {\n    onAddTask: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { username, email, text } = this.state;\n\n    if (username === '' || email === '' || text === '') {\n      return;\n    }\n    const newTask = this.state;\n\n    this.props.onAddTask(newTask);\n    this.props.onCancel();\n    this.resetState();\n  };\n\n  resetState = () => this.setState({ ...INITIAL_STATE });\n\n  render() {\n    const { username, email, text } = this.state;\n    const { onCancel } = this.props;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <input\n          name=\"username\"\n          value={username}\n          className={styles.input}\n          placeholder=\"User name\"\n          onChange={this.handleInputChange}\n        />\n        <input\n          name=\"email\"\n          value={email}\n          className={styles.input}\n          placeholder=\"Email\"\n          onChange={this.handleInputChange}\n        />\n        <textarea\n          name=\"text\"\n          value={text}\n          rows=\"8\"\n          className={styles.input}\n          placeholder=\"Type task text...\"\n          onChange={this.handleInputChange}\n        />\n        <div className={styles.actions}>\n          <Button type=\"submit\">Save</Button>\n          <Button onClick={onCancel}>Cancel</Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddTask: task => dispatch(addTask(task)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(TaskEditor);\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => (props.checked ? 'salmon' : 'papayawhip')};\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n  }\n`;\n\nconst Checkbox = ({ className, checked, disabled, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} disabled={disabled} {...props} />\n    <StyledCheckbox checked={checked} disabled={disabled}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  checked: false,\n  disabled: false,\n};\n\nexport default Checkbox;\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport Button from '../Button';\n// Instruments\nimport styles from './styles.module.css';\n\nexport default class EditableInput extends Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    onEditSuccess: PropTypes.func.isRequired,\n    onEditAbort: PropTypes.func.isRequired,\n  };\n\n  state = {\n    text: this.props.text,\n  };\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleEditSuccess = e => {\n    e.preventDefault();\n\n    this.props.onEditSuccess(this.state);\n  };\n\n  handleEditCancel = e => {\n    e.preventDefault();\n\n    this.props.onEditAbort();\n  };\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleEditSuccess}>\n        <textarea\n          name={'text'}\n          value={text}\n          rows={8}\n          className={styles.input}\n          onChange={this.handleInputChange}\n        />\n        <div className={styles.actions}>\n          <Button type=\"submit\">Save</Button>\n          <Button onClick={this.handleEditCancel} type=\"submit\">\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport Checkbox from '../shared/Checkbox';\nimport EditableInput from '../shared/EditableInput';\nimport Button from '../shared/Button';\n// Instruments\nimport { updateTaskText, updateTaskStatus } from '../../redux/actions/tasks';\nimport styles from './styles.module.css';\n\nclass Task extends Component {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    status: PropTypes.number.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n    onUpdateTaskText: PropTypes.func.isRequired,\n    onUpdateTaskStatus: PropTypes.func.isRequired,\n  };\n\n  state = { isBeingEdited: false, checked: false };\n\n  componentDidMount() {\n    if (this.props.status === 10) {\n      this.setState({\n        checked: true,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsChanged =\n      nextProps.text !== this.props.text ||\n      nextProps.status !== this.props.status ||\n      nextProps.authenticated !== this.props.authenticated;\n\n    const stateChanged =\n      this.state.isBeingEdited !== nextState.isBeingEdited ||\n      this.state.checked !== nextState.checked;\n\n    return propsChanged || stateChanged;\n  }\n\n  onEditStart = () => this.setState({ isBeingEdited: true });\n\n  onEditEnd = () => this.setState({ isBeingEdited: false });\n\n  handleCheckboxChange = ({ target: { checked } }) => {\n    this.setState({ checked }, () => {\n      const status = this.state.checked ? 10 : 0;\n\n      this.props.onUpdateTaskStatus({\n        id: this.props.id,\n        status,\n      });\n    });\n  };\n\n  handleUpdate = text => {\n    this.props.onUpdateTaskText({ id: this.props.id, text });\n    this.onEditEnd();\n  };\n\n  render() {\n    const { id, username, email, text, authenticated } = this.props;\n    const { checked, isBeingEdited } = this.state;\n\n    return (\n      <div className={styles.task}>\n        <label htmlFor={id} style={{ marginBottom: 8 }}>\n          <Checkbox\n            id={id}\n            checked={checked}\n            disabled={!authenticated}\n            onChange={this.handleCheckboxChange}\n          />\n          <span style={{ marginLeft: 8 }}>\n            {checked ? 'Completed' : 'Uncompleted'}\n          </span>\n        </label>\n        <p className={styles.text}>\n          <span className={styles.title}>Username: </span>\n          {username}\n        </p>\n        <p className={styles.text}>\n          <span className={styles.title}>Email: </span>\n          {email}\n        </p>\n        {isBeingEdited ? (\n          <EditableInput\n            text={text}\n            onEditSuccess={this.handleUpdate}\n            onEditAbort={this.onEditEnd}\n          />\n        ) : (\n          <>\n            <p className={styles.text}>\n              <span className={styles.title}>Text: </span>\n              {text}\n            </p>\n            <div className={styles.actions}>\n              <Button disabled={!authenticated} onClick={this.onEditStart}>\n                Edit\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onUpdateTaskText: taskToUpdate => dispatch(updateTaskText(taskToUpdate)),\n  onUpdateTaskStatus: taskToUpdate => dispatch(updateTaskStatus(taskToUpdate)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Task);\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InlineMessage = ({ text }) => <p>{text}</p>;\n\nInlineMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n// Instruments\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\nconst Button = ({ type, active, disabled, children, onClick }) => {\n  const btnCls = cx({\n    button: true,\n    active,\n    disabled,\n  });\n\n  return (\n    <button\n      className={btnCls}\n      disabled={disabled}\n      type={type}\n      onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  active: false,\n  disabled: false,\n  children: '',\n  onClick: () => {},\n};\n\nexport default Button;\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport PagerButton from '../shared/PagerButton';\n// Instruments\nimport { fetchTasksOnChangePage } from '../../redux/actions/tasks';\n\nconst styles = {\n  list: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingLeft: 0,\n    listStyle: 'none',\n  },\n};\n\nclass Pager extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({})),\n    totalItems: PropTypes.number,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number,\n    sortField: PropTypes.string,\n    sortDirection: PropTypes.string,\n    onChangePage: PropTypes.func,\n  };\n\n  static defaultProps = {\n    items: [],\n    totalItems: null,\n    initialPage: 1,\n    pageSize: 3,\n    sortField: '',\n    sortDirection: '',\n    onChangePage: () => null,\n  };\n\n  state = { pager: {} };\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset page if initialPage has changed\n    if (\n      this.props.initialPage !== prevProps.initialPage ||\n      this.props.totalItems !== prevProps.totalItems\n    ) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage = page => {\n    const { totalItems, pageSize, sortField, sortDirection } = this.props;\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let pager = this.state.pager;\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(totalItems, page, pageSize);\n\n    // update state\n    this.setState({ pager });\n\n    // call change page function\n    this.props.onChangePage(page, sortField, sortDirection);\n  };\n\n  getPager = (totalItems, currentPage, pageSize) => {\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage;\n    let endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      // eslint-disable-next-line no-lonely-if\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i,\n    );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages,\n    };\n  };\n\n  render() {\n    const { pager } = this.state;\n    // doesn't display pager if there is only 1 page\n    if (!pager.pages || pager.pages.length <= 1) {\n      return null;\n    }\n\n    return (\n      <ul style={styles.list}>\n        <li>\n          <PagerButton\n            disabled={pager.currentPage === 1}\n            onClick={() => this.setPage(1)}>\n            First\n          </PagerButton>\n        </li>\n        <li>\n          <PagerButton\n            disabled={pager.currentPage === 1}\n            onClick={() => this.setPage(pager.currentPage - 1)}>\n            Previous\n          </PagerButton>\n        </li>\n        {pager.pages.map(page => (\n          <li key={page}>\n            <PagerButton\n              active={pager.currentPage === page}\n              onClick={() => this.setPage(page)}>\n              {page}\n            </PagerButton>\n          </li>\n        ))}\n        <li>\n          <PagerButton\n            disabled={pager.currentPage === pager.totalPages}\n            onClick={() => this.setPage(pager.currentPage + 1)}>\n            Next\n          </PagerButton>\n        </li>\n        <li>\n          <PagerButton\n            disabled={pager.currentPage === pager.totalPages}\n            onClick={() => this.setPage(pager.totalPages)}>\n            Last\n          </PagerButton>\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.tasks.data,\n  totalItems: state.pager.totalItems,\n  initialPage: state.pager.currentPage,\n  pageSize: state.pager.pageSize,\n  sortField: state.sort.sortField,\n  sortDirection: state.sort.sortDirection,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangePage: (page, sortField, sortDirection) =>\n    dispatch(fetchTasksOnChangePage(page, sortField, sortDirection)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Pager);\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Masonry from 'react-masonry-component';\nimport { connect } from 'react-redux';\n// Components\nimport Task from '../Task';\nimport InlineMessage from '../shared/InlineMessage';\nimport Pager from '../shared/Pager';\n// Instruments\nimport { getVisibleTasks } from '../../utils/selectors';\nimport styles from './styles.module.css';\n\nconst TaskList = ({ tasks, ...props }) =>\n  tasks.length > 0 ? (\n    <>\n      <Masonry className={styles.list} elementType={'ul'}>\n        {tasks.map(task => (\n          <li key={task.id} className={styles.item}>\n            <Task {...task} {...props} />\n          </li>\n        ))}\n      </Masonry>\n      <Pager />\n    </>\n  ) : (\n    <InlineMessage text=\"There are no tasks yet. Please, add a new one.\" />\n  );\n\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  tasks: getVisibleTasks(state.tasks.data, state.filter),\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(TaskList);\n","/* eslint-disable-next-line */\nexport const getVisibleTasks = (tasks, filter) =>\n  tasks.filter(\n    task => task.username.includes(filter) || task.email.includes(filter),\n  );\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Instruments\nimport styles from './styles.module.css';\n\nconst Input = ({ type, name, value, placeholder, onChange }) => (\n  <input\n    type={type}\n    name={name}\n    value={value}\n    className={styles.input}\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n);\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  placeholder: '',\n};\n\nexport default Input;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport Input from '../shared/Input';\n// Instruments\nimport { changeFilter } from '../../redux/actions/tasks';\nimport styles from './styles.module.css';\n\nconst TaskFilter = ({ filter, onFilterChange }) => (\n  <form className={styles.form}>\n    <Input\n      name=\"text\"\n      value={filter}\n      placeholder=\"Filter by username and email...\"\n      onChange={({ target: { value } }) => onFilterChange(value)}\n    />\n  </form>\n);\n\nTaskFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: filter => dispatch(changeFilter(filter)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskFilter);\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// Components\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n// Instruments\nimport { signIn } from '../../redux/actions/auth';\n\nconst styles = {\n  page: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 100,\n  },\n  inputGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\nconst INITIAL_STATE = { login: '', password: '' };\n\nclass LoginPage extends Component {\n  static propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n    history: PropTypes.shape({}),\n    signIn: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    history: {},\n  };\n\n  state = { ...INITIAL_STATE };\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  checkAuthentication = () => {\n    const { authenticated, history } = this.props;\n\n    if (authenticated) {\n      history.push('/');\n    }\n  };\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { login, password } = this.state;\n\n    if (login === '' || password === '') return;\n\n    this.props.signIn({ ...this.state });\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, password } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div style={styles.page}>\n        <form style={styles.form} onSubmit={this.handleSubmit}>\n          <div style={styles.inputGroup}>\n            <Input\n              type=\"text\"\n              name=\"login\"\n              value={login}\n              placeholder=\"Login\"\n              onChange={this.handleInputChange}\n            />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <Button type=\"submit\">Login</Button>\n            <Button onClick={() => history.push('/')}>Back</Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n});\n\nconst mapDispatchToProps = { signIn };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginPage);\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Instruments\nimport styles from './styles.module.css';\n\nconst Loader = ({ width, height }) => (\n  <div className={styles.backdrop}>\n    <div className={styles.sk_fading_circle} style={{ width, height }}>\n      <div className={`${styles.sk_circle1} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle2} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle3} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle4} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle5} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle6} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle7} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle8} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle9} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle10} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle11} ${styles.sk_circle}`} />\n      <div className={`${styles.sk_circle12} ${styles.sk_circle}`} />\n    </div>\n  </div>\n);\n\nLoader.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nLoader.defaultProps = {\n  width: 40,\n  height: 40,\n};\n\nexport default Loader;\n","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Modal from 'react-modal';\n// Components\nimport AppBar from '../AppBar';\nimport AuthManager from '../AuthManager';\nimport SortManager from '../SortManager';\nimport TaskEditor from '../TaskEditor';\nimport TaskList from '../TaskList';\nimport TaskFilter from '../TaskFilter';\nimport Login from '../pages/Login';\nimport Loader from '../shared/Loader';\nimport Button from '../shared/Button';\nimport Container from '../ui/container';\n// Instruments\nimport { fetchTasks } from '../../redux/actions/tasks';\n\nModal.setAppElement('#root');\n\nconst styles = {\n  modal: {\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.2)' },\n    content: {\n      width: 600,\n      height: 450,\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  },\n};\n\nclass App extends Component {\n  static propTypes = {\n    isLoading: PropTypes.bool,\n    page: PropTypes.number.isRequired,\n    sortField: PropTypes.string.isRequired,\n    sortDirection: PropTypes.string.isRequired,\n    fetchTasks: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    isLoading: false,\n  };\n\n  state = {\n    isModalOpen: false,\n  };\n\n  componentDidMount() {\n    const { page, sortField, sortDirection, fetchTasks } = this.props;\n\n    fetchTasks({\n      page,\n      sortField,\n      sortDirection,\n    });\n  }\n\n  handleOpenModal = () => this.setState({ isModalOpen: true });\n\n  handleCloseModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    const { isModalOpen } = this.state;\n    const { isLoading } = this.props;\n\n    return (\n      <Router basename=\"/task-manager-app\">\n        <AppBar>\n          <Button onClick={this.handleOpenModal}>Create task</Button>\n          <SortManager />\n          <TaskFilter />\n          <AuthManager />\n        </AppBar>\n        <Container>\n          {isLoading ? (\n            <Loader width={80} height={80} />\n          ) : (\n            <>\n              <Route exact path=\"/\" component={TaskList} />\n              <Route path=\"/login\" component={Login} />\n            </>\n          )}\n          <Modal\n            isOpen={isModalOpen}\n            onRequestClose={this.handleCloseModal}\n            contentLabel=\"Modal Window\"\n            style={styles.modal}>\n            <TaskEditor onCancel={this.handleCloseModal} />\n          </Modal>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.tasks.loading,\n  page: state.pager.currentPage,\n  sortField: state.sort.sortField,\n  sortDirection: state.sort.sortDirection,\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks },\n)(App);\n","import { combineReducers } from 'redux';\nimport {\n  FETCH_TASKS_START,\n  FETCH_TASKS_SUCCESS,\n  FETCH_TASKS_FAIL,\n  ADD_TASK_SUCCESS,\n  UPDATE_TASK_TEXT_SUCCESS,\n  UPDATE_TASK_STATUS_SUCCESS,\n} from '../actions/types';\n\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nfunction dataReducer(state = [], { type, payload }) {\n  switch (type) {\n    case FETCH_TASKS_SUCCESS:\n      return payload;\n    case ADD_TASK_SUCCESS:\n      return [...state, payload];\n    case UPDATE_TASK_TEXT_SUCCESS:\n      return state.map(task =>\n        task.id === payload.id ? { ...task, text: payload.text } : task,\n      );\n    case UPDATE_TASK_STATUS_SUCCESS:\n      return state.map(task =>\n        task.id === payload.id ? { ...task, status: payload.status } : task,\n      );\n\n    default:\n      return state;\n  }\n}\n\nfunction loadingReducer(state = false, { type }) {\n  switch (type) {\n    case FETCH_TASKS_START:\n      return true;\n\n    case FETCH_TASKS_SUCCESS:\n    case ADD_TASK_SUCCESS:\n    case UPDATE_TASK_TEXT_SUCCESS:\n    case UPDATE_TASK_STATUS_SUCCESS:\n    case FETCH_TASKS_FAIL:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction errorReducer(state = null, { type, payload }) {\n  switch (type) {\n    case FETCH_TASKS_SUCCESS:\n    case ADD_TASK_SUCCESS:\n    case UPDATE_TASK_TEXT_SUCCESS:\n    case UPDATE_TASK_STATUS_SUCCESS:\n      return null;\n    case FETCH_TASKS_FAIL:\n      return payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  data: dataReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","import { combineReducers } from 'redux';\nimport { CHANGE_SORT_FIELD, CHANGE_SORT_DIRECTION } from '../actions/types';\n\nconst initialState = {\n  sortField: '',\n  sortDirection: '',\n};\n\nfunction sortFieldReducer(state = '', { type, payload }) {\n  switch (type) {\n    case CHANGE_SORT_FIELD:\n      return payload;\n\n    default:\n      return state;\n  }\n}\n\nfunction sortDirectionReducer(state = '', { type, payload }) {\n  switch (type) {\n    case CHANGE_SORT_DIRECTION:\n      return payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  sortField: sortFieldReducer,\n  sortDirection: sortDirectionReducer,\n});\n","import { CHANGE_PAGE, UPDATE_TASKS_AMOUNT } from '../actions/types';\n\nconst initialState = {\n  totalItems: null,\n  currentPage: 1,\n  pageSize: 3,\n};\n\nexport default function pagerReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CHANGE_PAGE:\n      return { ...state, currentPage: payload };\n\n    case UPDATE_TASKS_AMOUNT:\n      return { ...state, totalItems: payload };\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_FILTER } from '../actions/types';\n\nconst initialState = '';\n\nexport default function filterReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAIL,\n  SIGN_OUT,\n} from '../actions/types';\n\nconst initialState = {\n  admin: {\n    login: null,\n    password: null,\n  },\n  authenticated: false,\n  error: null,\n};\n\nfunction admin(state = { login: null, password: null }, { type, payload }) {\n  switch (type) {\n    case SIGN_IN_SUCCESS:\n      return payload;\n\n    case SIGN_OUT:\n      return { name: null, login: null };\n\n    default:\n      return state;\n  }\n}\n\nfunction authenticated(state = false, { type }) {\n  switch (type) {\n    case SIGN_IN_SUCCESS:\n      return true;\n\n    case SIGN_OUT:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction error(state = null, { type, payload }) {\n  switch (type) {\n    case SIGN_IN_REQUEST:\n    case SIGN_IN_SUCCESS:\n    case SIGN_OUT:\n      return null;\n\n    case SIGN_IN_FAIL:\n      return payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  admin,\n  authenticated,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport taskReducer from './tasks';\nimport sortReducer from './sort';\nimport pagerReducer from './pager';\nimport filterReducer from './filter';\nimport authReducer from './auth';\n\nconst rootReducer = combineReducers({\n  tasks: taskReducer,\n  pager: pagerReducer,\n  sort: sortReducer,\n  filter: filterReducer,\n  auth: authReducer,\n});\n\nexport default rootReducer;\n","const thunk = ({ dispatch, getState }) => next => action =>\n  typeof action === 'function' ? action(dispatch, getState) : next(action);\n\nexport default thunk;\n","import { SAVE_SESSION } from '../actions/types';\n\nconst auth = store => next => action => {\n  if (action.type && action.type === SAVE_SESSION) {\n    localStorage.setItem('session', JSON.stringify(store.getState().auth));\n  }\n\n  next(action);\n};\n\nexport default auth;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\nimport thunk from './middleware/thunk';\nimport session from './middleware/auth';\n\nconst middleware = [logger, thunk, session];\n\nconst enhancer = composeWithDevTools(applyMiddleware(...middleware));\n\nlet sessionState = null;\n\ntry {\n  sessionState = JSON.parse(localStorage.getItem('session'));\n} catch (err) {\n  console.log(err);\n}\n\nconst persistedState = sessionState ? { auth: sessionState } : {};\n\nconst store = createStore(rootReducer, persistedState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './theme/base.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__dt3nn\",\"input\":\"styles_input__32epv\",\"actions\":\"styles_actions__1tf4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"styles_actions__3yzDD\",\"input\":\"styles_input__2F6JM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__l9Qlm\",\"item\":\"styles_item__1rmaJ\"};"],"sourceRoot":""}